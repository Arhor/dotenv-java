plugins {
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'com.github.arhor'
version = '0.1.4'

sourceCompatibility = property('version.java')
targetCompatibility = property('version.java')

wrapper {
    gradleVersion = project.property('version.gradle')
}

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.github.spotbugs:spotbugs-annotations:${property('version.spotbugs')}"

    testImplementation "io.kotest:kotest-runner-junit5-jvm:${property('version.kotest')}"
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
        '-Xlint:unchecked',
        '-Xlint:deprecation',
        '-parameters',
    ]
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = [
            '-Xjsr305=strict',
            '-Xjvm-default=all',
        ]
        jvmTarget = project.property('version.java')
        javaParameters = true
    }
}

jacoco {
    toolVersion = property('version.jacoco')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(false)
        csv.required.set(false)
        html.required.set(true)
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.95
            }
        }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    environment 'TEST_RESOURCES_DIR', file('src/test/resources')
}

check {
    dependsOn(
        test,
        jacocoTestReport,
        jacocoTestCoverageVerification,
    )
}

publishing {
    publications {
        create('maven', MavenPublication) {
            it.from components['java']

            it.pom {
                licenses {
                    license {
                        name.set('The Apache License, Version 2.0')
                        url.set('https://www.apache.org/licenses/LICENSE-2.0.txt')
                    }
                }
                developers {
                    developer {
                        id.set('arhor')
                        name.set('Maksim Buryshynets')
                        email.set('arhor18@gmail.com')
                    }
                }
            }
        }
    }
}
